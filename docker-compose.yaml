version: '3.8'

services:
  keycloak:
    image: jboss/keycloak:latest
    environment:
      - KEYCLOAK_USER=admin
      - KEYCLOAK_PASSWORD=MySecretPassword
      - DB_USER=keycloak
      - DB_PASSWORD=MySecretPassword
      - DB_ADDR=iam-db
      - DB_DATABASE=keycloak
      - DB_VENDOR=postgres
      - DB_PORT=5432
    ports:
      - "6080:8080"
    networks:
      - keycloak_network
    depends_on:
      iam-db:
        condition: service_healthy

  iam-db:
    image: postgres:latest
    environment:
      - POSTGRES_USER=keycloak
      - POSTGRES_PASSWORD=MySecretPassword
    volumes:
      - iam_db_vol:/var/lib/postgresql/data
    networks:
      - keycloak_network
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "-q",
          "-d",
          "${DB_NAME}",
          "-U",
          "${DB_USER}"
        ]
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 5s

  file-manager-db:
    image: postgres:latest
    environment:
      - POSTGRES_USER=file
      - POSTGRES_PASSWORD=MySecretPassword
    volumes:
      - fm_db_vol:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - file_manager_network
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "-q",
          "-d",
          "${DB_NAME}",
          "-U",
          "${DB_USER}"
        ]
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 5s

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      - RABBITMQ_DEFAULT_USER=haccp
      - RABBITMQ_DEFAULT_PASS=MySecretPassword
    volumes:
      - rabbit_data_vol:/var/lib/rabbitmq
      - ./rabbitmq/definitions.json:/etc/rabbitmq/definitions.json
    ports:
      - "5671:5672"
      - "15671:15672"

  url-cache:
    image: redis
    command: [ "redis-server", "--appendonly", "yes" ]
    ports:
      - '6379:6379'
    volumes:
      - redis_vol:/data
    networks:
      - file_manager_network

  cache:
    image: redis
    command: [ "redis-server", "--appendonly", "yes" ]
    volumes:
      - cache_vol:/data

  mongo:
    image: mongo
    volumes:
      - mongo_vol:/data/db
    networks:
      - graylog_network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.10.2
    environment:
      - http.host=0.0.0.0
      - transport.host=localhost
      - network.host=0.0.0.0
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elastic_vol:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
    deploy:
      resources:
        limits:
          memory: 1g
    networks:
      - graylog_network

  graylog:
    image: graylog/graylog:4.2
    environment:
      - GRAYLOG_PASSWORD_SECRET=somepasswordpepper
      # pass: admin
      - GRAYLOG_ROOT_PASSWORD_SHA2=8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918
    entrypoint: /usr/bin/tini -- wait-for-it elasticsearch:9200 --  /docker-entrypoint.sh
    networks:
      - graylog_network
    depends_on:
      - mongo
      - elasticsearch
    ports:
      # Graylog web interface and REST API
      - 9000:9000
      # Syslog TCP
      - 1514:1514
      # Syslog UDP
      - 1514:1514/udp
      # GELF TCP
      - 12201:12201
      # GELF UDP
      - 12201:12201/udp

networks:
  keycloak_network:
  graylog_network:
  file_manager_network:


volumes:
  file_manager_vol:
    external: false
  fm_db_vol:
    external: false
  rabbit_data_vol:
    external: false
  iam_db_vol:
    external: false
  redis_vol:
    external: false
  mongo_vol:
    external: false
  cache_vol:
    external: false
  elastic_vol:
    external: false
